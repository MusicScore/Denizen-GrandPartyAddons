####################################################################################################
#                                                                                                  #
#                                     VANILLA POTION BEHAVIOR                                      #
#                                                                                                  #
####################################################################################################
# 
# This utility allows people to quickly apply potion effects to an entity while respecting the
# vanilla potion effect rules.
# 
# 
# ----| PREREQUISITES
# 
# (Optional) Set "Tags.Timeout" to 0. This may increase the speed of the script and reduce lag spent
# by the Denizen engine in parsing the tags (in the scripts).
# 
# 
# ----| HOW TO USE
# 
# It is as simple as running a single run command:
# - run gpa_utility_vanilla_potion_behavior def:<dEntity>|<EFFECT>(|<EFFECT>|...)
# 
# Each <EFFECT> follows the format:
#   - SPIGOT_POTION_EFFECT,<power>,<duration>,<hide_ambience>,<hide_particles>
# 
# SPIGOT_POTION_EFFECT : A valid Spigot potion effect. A list can be found here:
#                        https://hub.spigotmc.org/javadocs/spigot/org/bukkit/potion/PotionEffectType.html
# power                : The power of the effect
# duration             : The duration of the effect, in ticks
# hide_ambience        : Whether or not to hide the ambience. Must be a boolean.
# hide_particles       : Whether or not to hide the particles. Overrides hide_ambience. Must be a
#                        boolean.
# 
# 
# 





# -----------------------------------------------
#
# Vanilla Potion Behavior Task
# 
# - Applies a potion effect to an entity while following vanilla rules
# 
# 

gpa_utility_vanilla_potion_behavior:
  type: task
  debug: false
  speed: 0

  # List all valid Spigot potion effects for 1.12. Will update for 1.13 soon
  valid_effects:
  - ABSORPTION
  - BLINDNESS
  - CONFUSION
  - DAMAGE_RESISTANCE
  - FAST_DIGGING
  - FIRE_RESISTANCE
  - GLOWING
  - HARM
  - HEAL
  - HEALTH_BOOST
  - HUNGER
  - INCREASE_DAMAGE
  - INVISIBILITY
  - JUMP
  - LEVITATION
  - LUCK
  - NIGHT_VISION
  - POISON
  - REGENERATION
  - SATURATION
  - SLOW
  - SLOW_DIGGING
  - SPEED
  - UNLUCK
  - WATER_BREATHING
  - WEAKNESS
  - WITHER

  script:
  - if <def[raw_context].as_list.size> < 2 {
    - debug ERROR 'This script requires at least two definitions! The first must be a valid dEntity!'
    - queue clear
  }
  - if !<server.entity_is_spawned[<def[1]>]> {
    - debug ERROR 'Invalid dEntity!'
    - queue clear
  }

  - foreach <def[raw_context].as_list.remove[1]||li@> {
    - if !<def[value].matches[[A-Za-z_]+,[0-9]+,[0-9]+,(true|false),(true|false)]> {
      - debug ERROR 'Invalid potion effect <&dq><def[value]><&dq>! Format is EFFECT_NAME,DURATION,POWER,HIDE_PARTICLES'
      - foreach next
    }

    # Compare the specified potion effect against the list of valid potion effects
    - if !<script.yaml_key[valid_effects].contains[<def[value].before[,]>]> {
      - debug ERROR 'Invalid potion effect <&dq><def[value].before[,]><&dq>! Must be a valid Spigot enum!'
      - foreach next
    }

    - define find '<def[1].list_effects.parse[before[,]].find[<def[value].before[,]>]||-1>'

    # If the entity already has the potion effect, check the powers and durations of the applied
    # effect and the entity's effect.
    - if <def[find]> > 0 {
      - if <def[1].list_effects.get[<def[find]>].split_by[,].get[2]> > <def[value].split_by[,].get[2]>
        || <def[1].list_effects.get[<def[find]>].split_by[,].last.before[t]> > <def[value].split_by[,].get[3]> {
        - foreach next
      }
    }

    # Apply the potion effects as necessary.
    - if <def[value].split_by[,].get[4]> && <def[value].split_by[,].last> {
      - cast <def[value].before[,]> duration:<def[value].split_by[,].get[3]>t power:<def[value].split_by[,].get[2]> <def[1]> no_ambient hide_particles
    }
    else if <def[value].split_by[,].last> {
      - cast <def[value].before[,]> duration:<def[value].split_by[,].get[3]>t power:<def[value].split_by[,].get[2]> <def[1]> hide_particles
    }
    else if <def[value].split_by[,].get[4]> {
      - cast <def[value].before[,]> duration:<def[value].split_by[,].get[3]>t power:<def[value].split_by[,].get[2]> <def[1]> no_ambient
    }
    else {
      - cast <def[value].before[,]> duration:<def[value].split_by[,].get[3]>t power:<def[value].split_by[,].get[2]> <def[1]>
    }
  }
